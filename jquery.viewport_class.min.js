/*!
 * Viewport Class jQuery JavaScript Plugin v0.1.6
 * http://www.intheloftstudios.com/packages/jquery/jquery.viewport_class
 *
 * jQuery plugin (for responsive design) registers an element to maintain a css class of the viewport when it changes (with optional callback on viewport change)
 *
 * Copyright 2013, Aaron Klump
 * Dual licensed under the MIT or GPL Version 2 licenses.
 *
 * There are some global methods/variables available to your other scripts:
 *
 *   - jQuery.fn.viewportClass.getViewport()
 *
 * These variables hold the values computed in
 * jQuery.fn.viewportClass.getViewport() in case you need to back reference
 * them after the environment has changed.
 *
 *   - jQuery.fn.viewportClass.viewport: viewport name
 *   - jQuery.fn.viewportClass.viewportWidth: width of current viewport
 *   - jQuery.fn.viewportClass.width: The window actual width
 *   - jQuery.fn.viewportClass.height: the window actual height
 *
 * @param function callback
 *   A function to be called each time the body class changes. It receives the
 *   following parameters:
 *   - (int) viewportWidth: The pixel width of the design window, e.g. 320
 *   - (string) viewport: The name of the viewport, e.g. mobile-landscape
 *   - (bool) resized: This will be false the first time callback is called, as
 *     it the page load calls this function; then it will be -1 if the resize
 *     happens while the screen is getting smaller, and 1 if the window got
 *     bigger.
 * @param object breakpoints
 *   Optional. An object that defines custom breakpoints and classes.
 *  
 * @code
 *  $('body').viewportClass();
 * @endcode
 *
 * @code
 *  $('body').viewportClass(onViewportChange, {
      'mobile-p': 320,
      'mobile-l': 480,
      'iphone5-l': 568,
      'tablet_p': 768,
      'desktop': 960,
      'widescreen': 1080,
    });
 *
 * ...elsewhere in your code...
 *
 * function onViewportChange(viewportWidth, viewport, resized) {
 *   // The beauty of this callback is that it is only triggered when switching
 *   between viewports, not when the window changes. And you know if you're
 *   getting bigger or smaller windows.
 * }
 * @endcode
 *
 * Date: Wed, 04 Dec 2013 12:11:48 -0800
 */(function(e,t){"use strict";function r(){return e(window).width()}function i(){return e(window).height()}var n={"mobile-mini":0,"mobile-portrait":320,"mobile-landscape":480,tablet_portrait:768,desktop:960};e.fn.viewportClass=function(t,i){function f(n,i){s.removeClass("viewport-"+o);if(o!==n){o=n;u=r()}s.addClass("viewport-"+n);t&&t(e.fn.viewportClass.viewportWidth,n,i)}var s=e(this);if(s.length===0)return;typeof i=="undefined"&&(i=n);var o,u,a;o?a=!1:e(window).load(function(){var t=e.fn.viewportClass.getViewport(i);f(t,0)});e(window).bind("resize",function(){var t=e.fn.viewportClass.getViewport(i);t!==o&&f(t,r()>u?1:-1)});return this};e.fn.viewportClass.getViewport=function(t){var s={width:r(),height:i()};typeof t=="undefined"&&(t=n);var o=null;for(var u in t){if(s.width<=t[u]){s.viewport=u;s.viewportWidth=t[u];break}s.viewport=u;s.viewportWidth=t[u]}for(var u in s)e.fn.viewportClass[u]=s[u];return s.viewport};e.fn.viewportClass.version=function(){return"0.1.6"}})(jQuery);